import{Z as k,_ as z,w as F,a0 as b,b0 as j,bK as G,al as S,$ as U,S as W,g as D,a as H,a2 as N,a4 as X,a3 as K,i as V,f as Z}from"./proj4-75e1e0c4.js";class q extends k{constructor(e){e=e||{},super(e)}}const J=q;class O extends z{constructor(e){super(e),this.image_=null}getImage(){return this.image_?this.image_.getImage():null}prepareFrame(e){const h=e.layerStatesArray[e.layerIndex],g=e.pixelRatio,a=e.viewState,r=a.resolution,o=this.getLayer().getSource(),n=e.viewHints;let s=e.extent;if(h.extent!==void 0&&(s=F(s,b(h.extent,a.projection))),!n[j.ANIMATING]&&!n[j.INTERACTING]&&!G(s))if(o){const c=a.projection,t=o.getImage(s,r,g,c);t&&(this.loadImage(t)?this.image_=t:t.getState()===S.EMPTY&&(this.image_=null))}else this.image_=null;return!!this.image_}getData(e){const h=this.frameState;if(!h)return null;const g=this.getLayer(),a=U(h.pixelToCoordinateTransform,e.slice()),r=g.getExtent();if(r&&!W(r,a))return null;const o=this.image_.getExtent(),n=this.image_.getImage(),s=D(o),c=Math.floor(n.width*((a[0]-o[0])/s));if(c<0||c>=n.width)return null;const t=H(o),l=Math.floor(n.height*((o[3]-a[1])/t));return l<0||l>=n.height?null:this.getImageData(n,c,l)}renderFrame(e,h){const g=this.image_,a=g.getExtent(),r=g.getResolution(),[o,n]=Array.isArray(r)?r:[r,r],s=g.getPixelRatio(),c=e.layerStatesArray[e.layerIndex],t=e.pixelRatio,l=e.viewState,E=l.center,T=l.resolution,P=t*o/(T*s),$=t*n/(T*s),A=e.extent,L=l.resolution,B=l.rotation,m=Math.round(D(A)/L*t),d=Math.round(H(A)/L*t);N(this.pixelTransform,e.size[0]/2,e.size[1]/2,1/t,1/t,B,-m/2,-d/2),X(this.inversePixelTransform,this.pixelTransform);const I=K(this.pixelTransform);this.useContainer(h,I,this.getBackground(e));const i=this.context,u=i.canvas;u.width!=m||u.height!=d?(u.width=m,u.height=d):this.containerReused||i.clearRect(0,0,m,d);let f=!1,R=!0;if(c.extent){const p=b(c.extent,l.projection);R=V(p,e.extent),f=R&&!Z(p,e.extent),f&&this.clipUnrotated(i,e,p)}const x=g.getImage(),y=N(this.tempTransform,m/2,d/2,P,$,0,s*(a[0]-E[0])/o,s*(E[1]-a[3])/n);this.renderedResolution=n*t/s;const _=x.width*y[0],C=x.height*y[3];if(this.getLayer().getSource().getInterpolate()||(i.imageSmoothingEnabled=!1),this.preRender(i,e),R&&_>=.5&&C>=.5){const p=y[4],Y=y[5],w=c.opacity;let M;w!==1&&(M=i.globalAlpha,i.globalAlpha=w),i.drawImage(x,0,0,+x.width,+x.height,p,Y,_,C),w!==1&&(i.globalAlpha=M)}return this.postRender(i,e),f&&i.restore(),i.imageSmoothingEnabled=!0,I!==u.style.transform&&(u.style.transform=I),this.container}}const Q=O;class ee extends J{constructor(e){super(e)}createRenderer(){return new Q(this)}getData(e){return super.getData(e)}}const ne=ee;export{ne as I};
//# sourceMappingURL=Image-df45c9f2.js.map
