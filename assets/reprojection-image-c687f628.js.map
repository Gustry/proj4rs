{"version":3,"file":"reprojection-image-c687f628.js","sources":["../../node_modules/ol/source/static.js","../../node_modules/ol/source/ImageStatic.js","../../reprojection-image.js"],"sourcesContent":["/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      })\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","import Map from 'ol/Map.js';\nimport OSM from 'ol/source/OSM.js';\nimport Static from 'ol/source/ImageStatic.js';\nimport View from 'ol/View.js';\nimport {proj4} from './assets/js/proj4.js';\nimport {Image as ImageLayer, Tile as TileLayer} from 'ol/layer.js';\nimport {getCenter} from 'ol/extent.js';\nimport {register} from 'ol/proj/proj4.js';\nimport {transform} from 'ol/proj.js';\n\nproj4.defs(\n  'EPSG:27700',\n  '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs'\n);\nregister(proj4);\n\nconst imageExtent = [0, 0, 700000, 1300000];\nconst imageLayer = new ImageLayer();\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    imageLayer,\n  ],\n  target: 'map',\n  view: new View({\n    center: transform(getCenter(imageExtent), 'EPSG:27700', 'EPSG:3857'),\n    zoom: 4,\n  }),\n});\n\nconst interpolate = document.getElementById('interpolate');\n\nfunction setSource() {\n  const source = new Static({\n    url:\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/' +\n      'British_National_Grid.svg/2000px-British_National_Grid.svg.png',\n    crossOrigin: '',\n    projection: 'EPSG:27700',\n    imageExtent: imageExtent,\n    interpolate: interpolate.checked,\n  });\n  imageLayer.setSource(source);\n}\nsetSource();\n\ninterpolate.addEventListener('change', setSource);\n"],"names":["createLoader","options","load","decode","extent","image","resolutionX","getWidth","resolutionY","getHeight","Static","ImageSource","crossOrigin","imageLoadFunction","defaultImageLoadFunction","getProjection","ImageWrapper","src","EventType","resolution","pixelRatio","projection","intersects","Static$1","proj4","register","imageExtent","imageLayer","ImageLayer","Map","TileLayer","OSM","View","transform","getCenter","interpolate","setSource","source"],"mappings":"0RA2BO,SAASA,EAAaC,EAAS,CACpC,MAAMC,EAAOD,EAAQ,MAAQE,EACvBC,EAASH,EAAQ,YACjBI,EAAQ,IAAI,MAClB,OAAIJ,EAAQ,cAAgB,OAC1BI,EAAM,YAAcJ,EAAQ,aAGvB,IACLC,EAAKG,EAAOJ,EAAQ,GAAG,EAAE,KAAMI,GAAU,CACvC,MAAMC,EAAcC,EAASH,CAAM,EAAIC,EAAM,MACvCG,EAAcC,EAAUL,CAAM,EAAIC,EAAM,OAG9C,MAAO,CAAC,MAAAA,EAAO,OAAAD,EAAQ,WADrBE,IAAgBE,EAAc,CAACF,EAAaE,CAAW,EAAIA,EAC1B,WAAY,CAAC,CACtD,CAAK,CACL,CCZA,MAAME,UAAeC,CAAY,CAI/B,YAAYV,EAAS,CACnB,MAAMW,EACJX,EAAQ,cAAgB,OAAYA,EAAQ,YAAc,KAEJY,EACpDZ,EAAQ,oBAAsB,OAC1BA,EAAQ,kBACRa,EAER,MAAM,CACJ,aAAcb,EAAQ,aACtB,YAAaA,EAAQ,YACrB,WAAYc,EAAcd,EAAQ,UAAU,CAClD,CAAK,EAMD,KAAK,KAAOA,EAAQ,IAMpB,KAAK,aAAeA,EAAQ,YAM5B,KAAK,MAAQ,KAEb,KAAK,MAAQ,IAAIe,EACf,KAAK,aACL,OACA,EACAhB,EAAa,CACX,IAAKC,EAAQ,IACb,YAAaA,EAAQ,YACrB,YAAAW,EACA,KAAM,CAACP,EAAOY,KACZ,KAAK,MAAM,SAASZ,CAAK,EACzBQ,EAAkB,KAAK,MAAOI,CAAG,EAC1Bd,EAAOE,CAAK,EAE7B,CAAO,CACP,EAEI,KAAK,MAAM,iBACTa,EAAU,OACV,KAAK,kBAAkB,KAAK,IAAI,CACtC,CACG,CAOD,gBAAiB,CACf,OAAO,KAAK,YACb,CASD,iBAAiBd,EAAQe,EAAYC,EAAYC,EAAY,CAC3D,OAAIC,EAAWlB,EAAQ,KAAK,MAAM,UAAW,CAAA,EACpC,KAAK,MAEP,IACR,CAOD,QAAS,CACP,OAAO,KAAK,IACb,CACH,CAEA,MAAAmB,EAAeb,ECjHfc,EAAM,KACJ,aACA,kKAIF,EACAC,EAASD,CAAK,EAEd,MAAME,EAAc,CAAC,EAAG,EAAG,IAAQ,IAAO,EACpCC,EAAa,IAAIC,EAEX,IAAIC,EAAI,CAClB,OAAQ,CACN,IAAIC,EAAU,CACZ,OAAQ,IAAIC,CAClB,CAAK,EACDJ,CACD,EACD,OAAQ,MACR,KAAM,IAAIK,EAAK,CACb,OAAQC,EAAUC,EAAUR,CAAW,EAAG,aAAc,WAAW,EACnE,KAAM,CACV,CAAG,CACH,CAAC,EAED,MAAMS,EAAc,SAAS,eAAe,aAAa,EAEzD,SAASC,GAAY,CACnB,MAAMC,EAAS,IAAI3B,EAAO,CACxB,IACE,2HAEF,YAAa,GACb,WAAY,aACZ,YAAagB,EACb,YAAaS,EAAY,OAC7B,CAAG,EACDR,EAAW,UAAUU,CAAM,CAC7B,CACAD,IAEAD,EAAY,iBAAiB,SAAUC,CAAS","x_google_ignoreList":[0,1]}