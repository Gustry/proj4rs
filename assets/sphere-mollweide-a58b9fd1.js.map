{"version":3,"file":"sphere-mollweide-a58b9fd1.js","sources":["../../node_modules/ol/Feature.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/render.js","../../node_modules/ol/geom/flat/geodesic.js","../../node_modules/ol/layer/Graticule.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/format/JSONFeature.js","../../node_modules/ol/format/GeoJSON.js","../../sphere-mollweide.js"],"sourcesContent":["/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    }\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0][0].length;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0][0].length;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0].length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","import GeoJSON from 'ol/format/GeoJSON.js';\nimport Graticule from 'ol/layer/Graticule.js';\nimport Map from 'ol/Map.js';\nimport Projection from 'ol/proj/Projection.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport View from 'ol/View.js';\nimport {proj4} from './assets/js/proj4.js';\nimport {Fill, Style} from 'ol/style.js';\nimport {register} from 'ol/proj/proj4.js';\n\nproj4.defs(\n  'ESRI:53009',\n  '+proj=moll +lon_0=0 +x_0=0 +y_0=0 +a=6371000 ' +\n    '+b=6371000 +units=m +no_defs'\n);\nregister(proj4);\n\n// Configure the Sphere Mollweide projection object with an extent,\n// and a world extent. These are required for the Graticule.\nconst sphereMollweideProjection = new Projection({\n  code: 'ESRI:53009',\n  extent: [\n    -18019909.21177587, -9009954.605703328, 18019909.21177587,\n    9009954.605703328,\n  ],\n  worldExtent: [-179, -89.99, 179, 89.99],\n});\n\nconst style = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n});\n\nconst map = new Map({\n  keyboardEventTarget: document,\n  layers: [\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'https://openlayers.org/data/vector/ecoregions.json',\n        format: new GeoJSON(),\n      }),\n      style: function (feature) {\n        const color = feature.get('COLOR_BIO') || '#eeeeee';\n        style.getFill().setColor(color);\n        return style;\n      },\n    }),\n    new Graticule(),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    projection: sphereMollweideProjection,\n    zoom: 2,\n  }),\n});\n"],"names":["Feature","BaseObject","geometryOrProperties","geometry","properties","clone","style","unlistenByKey","listen","EventType","createStyleFunction","id","name","obj","styles","assert","Feature$1","Fill","options","color","Fill$1","interpolatePoint","flatCoordinates","offset","end","stride","fraction","dest","dimension","o","t","n","x1","y1","length","cumulativeLengths","i","x2","y2","target","index","binarySearch","lerp","lineStringCoordinateAtM","m","extrapolate","coordinate","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","interpolate","ii","lineStringLength","LineString","SimpleGeometry","coordinates","layout","extend","lineString","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","maxSquaredDelta","assignClosestPoint","callback","forEachSegment","inflateCoordinates","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","extent","intersectsLineString","deflateCoordinates","LineString$1","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","width","Stroke$1","ImageStyle","toSize","scale","abstract","pixelRatio","displacement","opacity","rotateWithView","rotation","listener","ImageStyle$1","asColorLike","toString","RegularShape","size","fill","image","renderOptions","context","createCanvasContext2D","ImageState","stroke","strokeWidth","r1","r2","tmp","points","alpha","a","b","d","e","miterRatio","k","l","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","defaultLineCap","defaultLineJoin","strokeStyle","defaultStrokeStyle","defaultLineWidth","defaultMiterLimit","add","maxRadius","defaultFillStyle","asArray","radius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Style","defaultGeometryFunction","renderer","text","feature","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","resolution","Style$1","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","offsetX","offsetY","placement","repeat","textAlign","justify","textBaseline","padding","Text$1","quickselect","arr","left","right","compare","quickselectStep","defaultCompare","z","s","sd","newLeft","newRight","j","swap","RBush$2","maxEntries","bbox","node","result","intersects","toBBox","nodesToSearch","child","childBBox","contains","data","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","height","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","area","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","minX","minY","maxX","maxY","children","stack","taintedTestContext","IconImage","EventTarget","src","crossOrigin","imageState","decodeFallback","canvas","ctx","asString","get","cacheKey","iconImage","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","getUid","getIconImage","onload","imageSize","anchor","iconImageSize","Icon$1","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","ascending","typeName","type","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","value","CallExpression","operator","args","newParsingContext","getTypeFromHint","typeHint","parse","encoded","isStringColor","parseCallExpression","Ops","parsers","createParser","_","withArgsCount","withGetArgs","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","arg","hint","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","argsCount","inputType","fallback","match","output","expectedInputType","interpolationType","interpolation","input","stop","condition","haystack","needleType","colors","parsedColors","returnType","argValidators","actualType","parser","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","fromString","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","compileInterpolateExpression","op","min","max","base","previousInput","previousOutput","isColor","withAlpha","interpolateColor","interpolateNumber","input1","output1","input2","output2","delta","along","factor","rgba1","rgba2","lcha1","rgbaToLcha","lcha2","deltaHue","lcha","normalize","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","isEmpty","empty","prefix","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","pointsName","requireNumber","radius1","angle","shape","evaluateRadius","circle","requireColorLike","requireNumberArray","array","requireSizeLike","property","Property","BaseVectorLayer","Layer","baseOptions","pixel","frameState","RBush","renderOrder","toStyleLike","toStyleFunction","first","candidate","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","tolerance","maxExtent","dashArray","dash","tmpCoord","myEnd","containsCoordinate","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","coordinateRelationship","Relationship","builderEnds","builderEnd","builderBegin","builderEndss","endss","myEnds","inflateMultiCoordinatesArray","inflateCoordinatesArray","hitDetectionInstructions","instruction","begin","reverseSubArray","state","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","lineWidth","equals","endGeometryInstruction","buffer","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","snap","PolygonBuilder","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","segmentLength","missing","matchingChunk","chunkStart","chunkEnd","start","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","oo","c","cc","chunk","chunkBegin","geometryWidths","interiorPoints","beg","w","keep","defaultPadding","p0","p1","p2","p3","currentFillStyle","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","beginX","beginY","startOffset","startLength","endM","endX","endY","reverse","flat","rotate","PI","singleSegment","previousAngle","iStart","charLength","len","chars","tmpExtent","createEmpty","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","createTransform","key","textIsArray","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","h","label","leftRight","strokeInstructions","fillInstructions","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","composeTransform","applyTransform","createOrUpdate","contextScale","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transform2D","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","dx","dy","r","fn","coords","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","hitTolerance","declutteredFeatures","contextSize","newContext","extendCoordinate","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","jj","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","CanvasExecutorGroup","CanvasImmediateRenderer","userTransform","toFixed","localTransform","close","transformGeom2D","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","img","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","clamp","g","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","simplifiedGeometry","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","CanvasLayerRenderer","vectorLayer","executorGroup","viewState","center","projection","projectionExtent","vectorSource","viewHints","ViewHint","multiWorld","worldWidth","getWidth","endWorld","world","compositionContext","canvasPool","releaseCanvas","layerState","makeScale","makeInverse","canvasTransform","transformToString","declutterExecutorGroup","render","RenderEventType","clipped","layerExtent","fromUserExtent","intersectsExtent","containsExtent","resolve","apply","layer","source","startX","matches","executorGroups","event","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","toUserExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","RBush_","extents","values","uid","rbush","RBush$1","GeometryCollection","Geometry","geometryCollection","createOrUpdateEmpty","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","sx","sy","getCenter","transformFn","deltaX","deltaY","clonedGeometries","GeometryCollection$1","MultiLineString","lineStrings","multiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","midpoints","midpoint","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","deflateCoordinatesArray","MultiLineString$1","MultiPoint","point","multiPoint","squaredDistance","squaredDx","Point","containsXY","MultiPoint$1","linearRingss","flatCenters","createOrUpdateFromFlatCoordinates","MultiPolygon","polygons","thisEndss","polygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","orientLinearRingsArray","linearRingssCenter","getInteriorPointsOfMultiArray","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","Polygon","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","MultiPolygon$1","tmpTransform","RenderFeature","createOrUpdateFromCoordinate","flatCenter","getInteriorPointOfArray","inflateEnds","getProjection","pixelExtent","projectedExtent","getHeight","memoizeOne","quantizeArray","RenderFeature$1","VectorEventType","all","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","VOID","VectorSourceEvent","Event","VectorSource","Source","allStrategy","useSpatialIndex","collection","Collection","featureKey","ObjectEventType","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","evt","CollectionEventType","fast","featureId","removeAndIgnoreReturn","clearEvent","wrapAndSliceX","anExtent","closestFeature","TRUE","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","object","featureChangeKeys","removed","loader","VectorSource$1","getVectorContext","canvasPixelRatio","multiplyTransform","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","geoM","fracA","fracB","fracM","squaredSegmentDistance","meridian","lon","lat1","lat2","epsg4326Projection","frac","getTransform","parallel","lat","lon1","lon2","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","degreesToStringHDMS","realWorldExtent","approximatelyEquals","renderExtent","getIntersection","equivalentProjection","featuresColl","poolIndex","minLat","maxLat","minLon","maxLon","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","inverted","vectorContext","textPoint","interval","wrapX","validCenterP","centerLonLat","centerLon","centerLat","maxLines","cnt","validExtentP","validExtent","clampedLat","bottom","top","clampedBottom","clampedTop","clampedLeft","clampedRight","coordinate1","worldExtent","toLonLatTransform","split","lonLatCoordinates","worldExtentP","Graticule$1","FeatureFormat","transformGeometryWithOptions","write","featureProjection","transformed","fromProjection","toProjection","power","GeometryConstructor","orientFlatCoordinates","linearRingsAreOriented","orientLinearRings","createRenderFeature","createGeometry","JSONFeature","getObject","JSONFeature$1","GeoJSON","geoJSONFeature","readGeometryInternal","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","featureObject","readGeometry","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geometryObject","getLayoutForStride","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","GeoJSON$1","proj4","register","sphereMollweideProjection","Projection","Map","View"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}